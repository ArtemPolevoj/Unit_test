1) Почему использование тестовых заглушек может быть
 полезным при написании модульных тестов?

    Заглушки позволяют изолировать тестируемый код от зависимостей.
    Использование заглушек позволяет ускорить выполнение тестов,
    так как они заменяют реальные зависимости на фиктивные.
    Заглушки позволяют контролировать поведение зависимостей и создавать
    различные сценарии для тестирования различных вариантов выполнения кода.
    Использование заглушек позволяет избежать ошибок, связанных с зависимостями,
    которые могут быть недоступны или изменены во время выполнения тестов.
    Если тестируемый код изменяется, то заглушки позволяют сохранить
    существующие тесты и обеспечить их работоспособность при изменении зависимостей.

2) Какой тип тестовой заглушки следует использовать,
 если вам нужно проверить, что метод был вызван с определенными аргументами?

    Для проверки вызова метода с определенными аргументами следует использовать моки.
    Моки - это заглушки, которые имитируют поведение реальных объектов и позволяют проверять,
    что методы были вызваны с определенными параметрами.
    Они также позволяют задавать ожидаемые значения возвращаемых результатов методов.

3) Какой тип тестовой заглушки следует использовать,
 если вам просто нужно вернуть определенное значение или исключение в ответ на вызов метода?

    Для этой задачи следует использовать фейки (Fake).
    Фейки - это заглушки, которые имеют реализацию методов,
    но она может отличаться от реальной.
    Они используются, когда нужно имитировать поведение реального объекта,
    но не требуется полная его реализация.
    Например, если нужно вернуть определенное значение или исключение в ответ на вызов метода.

4) Какой тип тестовой заглушки вы бы использовали для имитации
  взаимодействия с внешним API или базой данных?

    Для имитации взаимодействия с внешним API или базой данных следует использовать моки (Mocks).
    Моки - это объекты, которые имеют ту же структуру и интерфейс, что и реальный объект,
    но вместо реальной реализации методов они имеют заглушки,
    которые возвращают заранее заданные значения или исключения.
    Таким образом, можно эмулировать ответы от API или базы данных, не обращаясь к реальным ресурсам.